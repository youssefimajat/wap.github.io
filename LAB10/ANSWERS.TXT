first question :
setTimeout : is simply like calling the function after delay 
has finished. Whenever a function is called it is not executed 
immediately, but queued so that it is executed after all the 
executing and currently queued eventhandlers finish first. 
setTimeout(,0) essentially means execute after all current 
functions in the present queue get executed. 
No guarantees can be made about how long it could take.

setImmediate : is similar in this regard except that it doesn't
 use queue of functions. It checks queue of I/O eventhandlers. 
 If all I/O events in the current snapshot are processed,
 it executes the callback. It queues them immediately after 
 the last I/O handler somewhat like process.nextTick. 
 So it is faster.

 Second Question :
setImmediate() and process.nextTick() are two functions
which allows us to control the order of execution of our
code in the event loop. Both of these functions schedule our
callback handlers in the event queue. 
But they are executed at different phases of the event loop.

third question:
NO